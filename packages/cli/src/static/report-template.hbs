<html>

<head>
  <meta charset="utf-8">
  <title>{{reportTitles.plotTitle}}</title>
  <meta name="description" content="">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  {{!-- TRACERBENCH-CHART-BOOTSTRAP.CSS --}}
  <style>
    @media print {
      .page-break {
        page-break-before: always;
      }
    }

    @media screen {
      .page-break {
        margin-bottom: 10em;
      }
    }

    .full-width-chart {
      width: 100%;
    }
  </style>
</head>

<body>
  <div class="container">
    <div class="row">
      <div class="col">
        <h1>TracerBench: Boxplot Results</h1>
        <p>{{reportTitles.plotTitle}}</p>
      </div>
    </div>
    {{#each sectionFormattedData as |analysisForPhase|}}
    <div class="row">
      <div class="col">
        <h1>{{analysisForPhase.phase}}</h1>
        {{#if analysisForPhase.isSignificant}}
        <div class="alert alert-warning" style="color: #fff; background-color:#1884E4;border-color: #1884E4;"
          role="alert">
          Difference is Significant
        </div>
        {{else}}
        <div class="alert alert-secondary" role="alert">
          Difference is Not Significant
        </div>
        {{/if}}
        <p><i>Wilcoxon rank-sum test</i> indicated that
          {{#if analysisForPhase.isSignificant}}
          there is sufficient evidence that there is a difference between the control and experiment.
          {{else}}
          there is not sufficient evidence that there is a difference between the control and experiment.
          {{/if}}
        </p>
        <p>
          The <i>Hodgesâ€“Lehmann estimated</i> difference in location of the two distributions is
          {{analysisForPhase.hlDiff}} ms. With a 95% confidence the difference of the control and experiment is between {{analysisForPhase.ciMin}} ms to
          {{analysisForPhase.ciMax}} ms.
        </p>
      </div>
    </div>
    <div class="row">
      <div class="col">
        <canvas id="{{analysisForPhase.identifierHash}}-chart" class="full-width-chart"></canvas>
      </div>
    </div>
    <div class="row">
      <div class="col">
        <hr>
      </div>
    </div>
    {{#if analysisForPhase.shouldPageBreak}}
      <div class="row">
        <div class="col">
          <canvas id="all-in-one-chart" class="full-width-chart"></canvas>
        </div>
      </div>

      <div class="page-break"></div>
    {{/if}}
    {{/each}}
    <div class="row mt-5">
      <div class="col">
        <hr>
      </div>
    </div>
    <div class="row">
      <div class="col">
        <h1>Resources</h1>
        <ul>
          <li><a href="https://github.com/TracerBench/tracerbench/tree/extension#statistics-primer"
              target="_blank">Stats Primer</a></li>
          <li><a href="https://towardsdatascience.com/understanding-boxplots-5e2df7bcbd51" target="_blank">Understanding
              Boxplots</a></li>
          <li><a href="https://en.wikipedia.org/wiki/Wilcoxon_signed-rank_test" target="_blank">Wilcoxon Signed-Rank
              Test</a></li>
        </ul>
      </div>
    </div>
  </div>
  {{!-- TRACERBENCH-CHART-JS --}}
  <script>
    {{#each sectionFormattedData as |analysisForPhase|}}
      const canvasFor{{#toCamel analysisForPhase.identifierHash}}{{/toCamel}} = document.getElementById('{{analysisForPhase.identifierHash}}-chart').getContext('2d');
      const optionFor{{#toCamel analysisForPhase.identifierHash}}{{/toCamel}} = {
        type: 'boxplot',
          data: {
            labels: ['{{analysisForPhase.phase}}'],
            datasets: [{
              label: '{{analysisForPhase.servers.[0].name}}',
              borderColor: '#0A2D46',
              backgroundColor: 'rgba(199, 241, 106, 0.50)',
              borderWidth: 2,
              outlierColor: '#1884E4',
              itemRadius: 2,
              itemBackgroundColor: '#1884E4',
              data: [{{{analysisForPhase.controlSamples}}}]
            }, {
              label: '{{analysisForPhase.servers.[1].name}}',
              borderColor: '#0A2D46',
              backgroundColor: 'rgba(56, 210, 211, 0.50)',
              borderWidth: 2,
              outlierColor: '#1884E4',
              itemRadius: 2,
              itemBackgroundColor: '#1884E4',
              data: [{{{analysisForPhase.experimentSamples}}}]
          }]
        },
        options: {
          aspectRatio: 3,
          legend: {
            display: true,
            position: 'top'
          },
          title: {
            display: true,
            text: '{{reportTitles.plotTitle}}'
          },
          scales: {
            xAxes: [{
              // Specific to Bar Controller
              categoryPercentage: 0.9,
              barPercentage: 0.8
            }]
          }
        }
      };

      window['{{analysisForPhase.phase}}'] = new Chart(canvasFor{{#toCamel analysisForPhase.identifierHash}}{{/toCamel}}, optionFor{{#toCamel analysisForPhase.identifierHash}}{{/toCamel}});
    {{/each}}

    function randomValues(count, min, max) {
      const delta = max - min;
      return Array.from({length: count}).map(() => Math.random() * delta + min);
    }

    const boxplotData = {
      // define label tree
      labels: {{{cumulativeChartData.categories}}},
      datasets: [{
        label: '{{reportTitles.servers.[0].name}}',
        borderColor: '#0A2D46',
        backgroundColor: 'rgba(199, 241, 106, 0.50)',
        borderWidth: 2,
        outlierColor: '#1884E4',
        itemRadius: 2,
        itemBackgroundColor: '#1884E4',
        data: {{cumulativeChartData.controlData}}
      }, {
        label: '{{reportTitles.servers.[1].name}}',
        borderColor: '#0A2D46',
        backgroundColor: 'rgba(56, 210, 211, 0.50)',
        borderWidth: 2,
        outlierColor: '#1884E4',
        itemRadius: 2,
        itemBackgroundColor: '#1884E4',
        data: {{cumulativeChartData.experimentData}}
      }]
    };

      const ctx = document.getElementById("all-in-one-chart").getContext("2d");
      window.myBar = new Chart(ctx, {
        type: 'boxplot',
        data: boxplotData,
        options: {
          aspectRatio: 1.5,
          legend: {
            position: 'top',
          },
          title: {
            display: true,
            text: 'Sub Phases of Duration (when they finished happening in the timeline)'
          }
        }
      });

  </script>
</body>

</html>