<html>

<head>
  <meta charset="utf-8">
  <title>{{reportTitles.plotTitle}}</title>
  <meta name="description" content="">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  {{!-- TRACERBENCH-CHART-BOOTSTRAP.CSS --}}
  <style>
    @media print {
      .page-break {
        page-break-before: always;
      }
      .print-only {
        display: inherit;
      }

      .display-only {
        display: none;
      }
    }

    @media screen {
      .page-break {
        margin-bottom: 10em;
      }

      .print-only {
        display: none;
      }

      .display-only {
        display: inherit;
      }
    }

    .full-width-chart {
      width: 100%;
    }

    .experiment-color {
      color: rgb(56, 210, 211);
    }
  </style>
</head>

<body>
  <div class="container">
    <div class="row">
      <div class="col">
        <h1>TracerBench: Boxplot Results</h1>
        <p>{{reportTitles.plotTitle}}</p>
        <hr>
      </div>
    </div>
    {{#each sectionFormattedData as |analysisForPhase|}}
    <div class="row">
      <div class="col">
        <h2>{{analysisForPhase.phase}}
          <small class="h5">
            {{#if analysisForPhase.isSignificant}}
              {{#if (isFaster analysisForPhase)}}
                <span class="text-success font-weight-bolder">Faster</span>
              {{else}}
                <span class="text-danger font-weight-bolder">Slower</span>
              {{/if}}
            {{else}}
              <span class="text-muted">No Difference</span>
            {{/if}}
          </small>
        </h2>
        <p>
          A statistical analysis test was used <i><small>(<a href="https://en.wikipedia.org/wiki/Wilcoxon_signed-rank_test" target="_blank">Wilcoxon Signed-Rank Test</a>)</small></i> to determine that
          {{#if analysisForPhase.isSignificant}}
          the results are significant meaning they are worth looking at.
          {{else}}
          results are not significant.
          {{/if}}
        </p>
        {{#if analysisForPhase.isSignificant}}
          <p>
            A statistics estimator <i><small>(<a href="https://en.wikipedia.org/wiki/Hodges%E2%80%93Lehmann_estimator" target="_blank">Hodges–Lehmann estimator</a>)</small></i> was used to determine <span class="experiment-color">{{analysisForPhase.servers.[1].name}}</span>
            {{#if (isFaster analysisForPhase)}}
              is <strong>faster</strong> by
            {{else}}
              is <strong>slower</strong> by
            {{/if}}
            <strong>{{abs analysisForPhase.hlDiff}} ms</strong>.
          </p>
        {{/if}}
      </div>
    </div>
    <div class="row">
      <div class="col">
        <canvas id="{{analysisForPhase.identifierHash}}-chart" class="full-width-chart"></canvas>
      </div>
    </div>
    <div class="row display-only">
      <div class="col-12">
        <a data-toggle="collapse" href="#{{analysisForPhase.identifierHash}}-stats" aria-expanded="false" aria-controls="{{analysisForPhase.identifierHash}}-stats">
          > Advanced Statistics
        </a>
      </div>
      <div class="col-12 mt-1">
        <div class="collapse" id="{{analysisForPhase.identifierHash}}-stats">
          <div class="card card-body">
            <p>Hodges–Lehmann estimated difference in location of the two distributions is <strong>{{analysisForPhase.hlDiff}}</strong> ms. With 95% confidence the difference of the control and experiment is between <strong>{{analysisForPhase.ciMin}} ms to {{analysisForPhase.ciMax}} ms</strong>.</p>
          </div>
        </div>
      </div>
    </div>
    <div class="row">
      <div class="col">
        <hr>
      </div>
    </div>
    {{#if analysisForPhase.shouldPageBreak}}
      <div class="row">
        <div class="col">
          <h3>Sub Phases of Duration</h3>
          <p>The chart below shows the finish times of the sub phases for experiment and control. It gives a high level view on what also changed (if there are any). <span class="print-only">You can view more details about the phases starting from page 2 on.</span><span class="display-only">You can view more details about the phases in the sections below.</span>
          </p>
        </div>
      </div>
      <div class="row">
        <div class="col">
          <canvas id="all-in-one-chart" class="full-width-chart"></canvas>
        </div>
      </div>

      <div class="page-break"></div>
      <div class="row">
        <div class="col">
          <h1>Sub Phases in Detail</h1>
          <hr>
        </div>
      </div>
    {{/if}}
    {{/each}}
    <div class="row mt-5">
      <div class="col">
        <hr>
      </div>
    </div>
    <div class="row">
      <div class="col">
        <h1>Resources</h1>
        <ul>
          <li><a href="https://github.com/TracerBench/tracerbench/#statistics-primer"
              target="_blank">Stats Primer</a></li>
          <li><a href="https://towardsdatascience.com/understanding-boxplots-5e2df7bcbd51" target="_blank">Understanding
              Boxplots</a></li>
          <li><a href="https://en.wikipedia.org/wiki/Wilcoxon_signed-rank_test" target="_blank">Wilcoxon Signed-Rank
              Test</a></li>
        </ul>
      </div>
    </div>
  </div>
  {{!-- TRACERBENCH-CHART-JS --}}
  <script>
    {{#each sectionFormattedData as |analysisForPhase|}}
      const canvasFor{{#toCamel analysisForPhase.identifierHash}}{{/toCamel}} = document.getElementById('{{analysisForPhase.identifierHash}}-chart').getContext('2d');
      const optionFor{{#toCamel analysisForPhase.identifierHash}}{{/toCamel}} = {
        type: 'boxplot',
          data: {
            labels: ['{{analysisForPhase.phase}} (Lower is Better)'],
            datasets: [{
              label: '{{analysisForPhase.servers.[0].name}}',
              borderColor: '#0A2D46',
              backgroundColor: 'rgba(199, 241, 106, 0.50)',
              borderWidth: 2,
              outlierColor: '#1884E4',
              itemRadius: 2,
              itemBackgroundColor: '#1884E4',
              data: [{{{analysisForPhase.controlSamples}}}]
            }, {
              label: '{{analysisForPhase.servers.[1].name}}',
              borderColor: '#0A2D46',
              backgroundColor: 'rgba(56, 210, 211, 0.50)',
              borderWidth: 2,
              outlierColor: '#1884E4',
              itemRadius: 2,
              itemBackgroundColor: '#1884E4',
              data: [{{{analysisForPhase.experimentSamples}}}]
          }]
        },
        options: {
          aspectRatio: 3,
          legend: {
            display: true,
            position: 'top'
          },
          title: {
            display: true,
            text: '{{reportTitles.plotTitle}}'
          },
          scales: {
            xAxes: [{
              // Specific to Bar Controller
              categoryPercentage: 0.9,
              barPercentage: 0.8
            }],
            yAxes: [{
              ticks: {
                callback: function(value) {
                  return `${value} ms`;
                }
              }
            }]
          }
        }
      };

      window['{{analysisForPhase.phase}}'] = new Chart(canvasFor{{#toCamel analysisForPhase.identifierHash}}{{/toCamel}}, optionFor{{#toCamel analysisForPhase.identifierHash}}{{/toCamel}});
    {{/each}}

    function randomValues(count, min, max) {
      const delta = max - min;
      return Array.from({length: count}).map(() => Math.random() * delta + min);
    }

    const boxplotData = {
      // define label tree
      labels: {{{cumulativeChartData.categories}}},
      datasets: [{
        label: '{{reportTitles.servers.[0].name}}',
        borderColor: '#0A2D46',
        backgroundColor: 'rgba(199, 241, 106, 0.50)',
        borderWidth: 1,
        itemBackgroundColor: '#1884E4',
        data: {{cumulativeChartData.controlData}}
      }, {
        label: '{{reportTitles.servers.[1].name}}',
        borderColor: '#0A2D46',
        backgroundColor: 'rgba(56, 210, 211, 0.50)',
        borderWidth: 1,
        itemBackgroundColor: '#1884E4',
        data: {{cumulativeChartData.experimentData}}
      }]
    };

      const ctx = document.getElementById("all-in-one-chart").getContext("2d");
      window.myBar = new Chart(ctx, {
        type: 'boxplot',
        data: boxplotData,
        options: {
          aspectRatio: 1.5,
          legend: {
            position: 'top',
          },
          title: {
            display: false,
            text: 'Sub Phases of Duration (when they finished happening in the timeline)'
          },
          scales: {
            yAxes: [{
              ticks: {
                callback: function(value) {
                  return `${value} ms`;
                }
              }
            }]
          }
        }
      });

  </script>
  <!-- The following javascript is needed for user interaction with the page. It's not necessary for pdf generation -->
  <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
</body>

</html>